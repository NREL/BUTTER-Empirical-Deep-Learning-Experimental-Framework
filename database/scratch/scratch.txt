2023-05-19 17:10:31.174920: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  SSE4.1 SSE4.2 AVX AVX2 FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
/home/ctripp/dmp/env0/lib/python3.10/site-packages/scipy/__init__.py:146: UserWarning: A NumPy version >=1.16.5 and <1.23.0 is required for this version of SciPy (detected version 1.23.5
  warnings.warn(f"A NumPy version >={np_minversion} and <{np_maxversion}"
/home/ctripp/dmp/env0/lib/python3.10/site-packages/sklearn/preprocessing/_encoders.py:828: FutureWarning: `sparse` was renamed to `sparse_output` in version 1.2 and will be removed in 1.4. `sparse_output` is ignored unless you leave `sparse` to its default value.
  warnings.warn(
/home/ctripp/dmp/env0/lib/python3.10/site-packages/sklearn/preprocessing/_encoders.py:828: FutureWarning: `sparse` was renamed to `sparse_output` in version 1.2 and will be removed in 1.4. `sparse_output` is ignored unless you leave `sparse` to its default value.
  warnings.warn(
2023-05-19 17:10:34.970058: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:967] could not open file to read NUMA node: /sys/bus/pci/devices/0000:01:00.0/numa_node
Your kernel may have been built without NUMA support.
2023-05-19 17:10:34.981086: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:967] could not open file to read NUMA node: /sys/bus/pci/devices/0000:01:00.0/numa_node
Your kernel may have been built without NUMA support.
2023-05-19 17:10:34.981166: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:967] could not open file to read NUMA node: /sys/bus/pci/devices/0000:01:00.0/numa_node
Your kernel may have been built without NUMA support.
2023-05-19 17:10:34.981365: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  SSE4.1 SSE4.2 AVX AVX2 FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-05-19 17:10:34.983248: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:967] could not open file to read NUMA node: /sys/bus/pci/devices/0000:01:00.0/numa_node
Your kernel may have been built without NUMA support.
2023-05-19 17:10:34.983328: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:967] could not open file to read NUMA node: /sys/bus/pci/devices/0000:01:00.0/numa_node
Your kernel may have been built without NUMA support.
2023-05-19 17:10:34.983360: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:967] could not open file to read NUMA node: /sys/bus/pci/devices/0000:01:00.0/numa_node
Your kernel may have been built without NUMA support.
2023-05-19 17:10:35.506344: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:967] could not open file to read NUMA node: /sys/bus/pci/devices/0000:01:00.0/numa_node
Your kernel may have been built without NUMA support.
2023-05-19 17:10:35.506428: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:967] could not open file to read NUMA node: /sys/bus/pci/devices/0000:01:00.0/numa_node
Your kernel may have been built without NUMA support.
2023-05-19 17:10:35.506445: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1700] Could not identify NUMA node of platform GPU id 0, defaulting to 0.  Your kernel may not have been built with NUMA support.
2023-05-19 17:10:35.506486: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:967] could not open file to read NUMA node: /sys/bus/pci/devices/0000:01:00.0/numa_node
Your kernel may have been built without NUMA support.
2023-05-19 17:10:35.506522: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1613] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 13603 MB memory:  -> device: 0, name: NVIDIA RTX A4500 Laptop GPU, pci bus id: 0000:01:00.0, compute capability: 8.6
0: [] -> (<class 'dmp.layer.input.Input'>: 0, [28, 28, 1], ) -> [1]
1: [0] -> (<class 'dmp.layer.dense_conv.DenseConv'>: 156, (28, 28, 6), 5x5, s: 1x1, sigmoid) -> [2]
2: [1] -> (<class 'dmp.layer.avg_pool.AvgPool'>: 0, (14, 14, 6), s: 2x2) -> [3]
3: [2] -> (<class 'dmp.layer.dense_conv.DenseConv'>: 906, (10, 10, 6), 5x5, s: 1x1, relu) -> [4]
4: [3] -> (<class 'dmp.layer.avg_pool.AvgPool'>: 0, (5, 5, 6), s: 2x2) -> [5]
5: [4] -> (<class 'dmp.layer.flatten.Flatten'>: 0, (150,), ) -> [6]
6: [5] -> (<class 'dmp.layer.dense.Dense'>: 18120, (120,), x120, relu) -> [7]
7: [6] -> (<class 'dmp.layer.dense.Dense'>: 10164, (84,), x84, relu) -> [8]
8: [7] -> (<class 'dmp.layer.dense.Dense'>: 850, (10,), x10, softmax) -> []
0: [] -> (<class 'dmp.layer.input.Input'>: 0, [28, 28, 1], "dmp_8") -> [1]
1: [0] -> (<class 'dmp.layer.dense_conv.DenseConv'>: 156, (28, 28, 6), 5x5, s: 1x1, sigmoid, "dmp_7") -> [2]
2: [1] -> (<class 'dmp.layer.avg_pool.AvgPool'>: 0, (14, 14, 6), s: 2x2, "dmp_6") -> [3]
3: [2] -> (<class 'dmp.layer.dense_conv.DenseConv'>: 906, (10, 10, 6), 5x5, s: 1x1, relu, "dmp_5") -> [4]
4: [3] -> (<class 'dmp.layer.avg_pool.AvgPool'>: 0, (5, 5, 6), s: 2x2, "dmp_4") -> [5]
5: [4] -> (<class 'dmp.layer.flatten.Flatten'>: 0, (150,), "dmp_3") -> [6]
6: [5] -> (<class 'dmp.layer.dense.Dense'>: 18120, (120,), x120, relu, "dmp_2") -> [7]
7: [6] -> (<class 'dmp.layer.dense.Dense'>: 10164, (84,), x84, relu, "dmp_1") -> [8]
8: [7] -> (<class 'dmp.layer.dense.Dense'>: 850, (10,), x10, softmax, "dmp_0") -> []
Model: "model"
_________________________________________________________________
 Layer (type)                Output Shape              Param #   
=================================================================
 dmp_8 (InputLayer)          [(None, 28, 28, 1)]       0         
                                                                 
 dmp_7 (Conv2D)              (None, 28, 28, 6)         156       
                                                                 
 dmp_6 (AveragePooling2D)    (None, 14, 14, 6)         0         
                                                                 
 dmp_5 (Conv2D)              (None, 10, 10, 6)         906       
                                                                 
 dmp_4 (AveragePooling2D)    (None, 5, 5, 6)           0         
                                                                 
 dmp_3 (Flatten)             (None, 150)               0         
                                                                 
 dmp_2 (Dense)               (None, 120)               18120     
                                                                 
 dmp_1 (Dense)               (None, 84)                10164     
                                                                 
 dmp_0 (Dense)               (None, 10)                850       
                                                                 
=================================================================
Total params: 30,196
Trainable params: 30,196
Non-trainable params: 0
_________________________________________________________________
2023-05-19 17:10:36.310586: I tensorflow/compiler/xla/service/service.cc:173] XLA service 0x55c51e49a270 initialized for platform CUDA (this does not guarantee that XLA will be used). Devices:
2023-05-19 17:10:36.310618: I tensorflow/compiler/xla/service/service.cc:181]   StreamExecutor device (0): NVIDIA RTX A4500 Laptop GPU, Compute Capability 8.6
2023-05-19 17:10:36.319288: I tensorflow/compiler/mlir/tensorflow/utils/dump_mlir_util.cc:268] disabling MLIR crash reproducer, set env var `MLIR_CRASH_REPRODUCER_DIRECTORY` to enable.
2023-05-19 17:10:37.016993: I tensorflow/compiler/xla/stream_executor/cuda/cuda_dnn.cc:428] Loaded cuDNN version 8800
2023-05-19 17:10:37.535657: I tensorflow/tsl/platform/default/subprocess.cc:304] Start cannot spawn child process: No such file or directory
2023-05-19 17:10:37.884181: I tensorflow/compiler/jit/xla_compilation_cache.cc:477] Compiled cluster using XLA!  This line is logged at most once for the lifetime of the process.
2023-05-19 17:10:37.885587: I tensorflow/compiler/xla/stream_executor/cuda/cuda_blas.cc:630] TensorFloat-32 will be used for the matrix multiplication. This will only be logged once.
ON TRAIN BEGIN ZERO EPOCH
2023-05-19 17:10:42.585445: I tensorflow/compiler/xla/stream_executor/gpu/asm_compiler.cc:325] ptxas warning : Registers are spilled to local memory in function 'fusion_71', 256 bytes spill stores, 48 bytes spill loads

2023-05-19 17:10:45.438835: I tensorflow/compiler/xla/stream_executor/gpu/asm_compiler.cc:325] ptxas warning : Registers are spilled to local memory in function 'fusion_69', 256 bytes spill stores, 48 bytes spill loads

Writing task to /home/ctripp/dmp/dmp/model_data/355d6326-aaf4-4d11-bfbe-d7ae667298f3/0_1/task.json...
Writing network to /home/ctripp/dmp/dmp/model_data/355d6326-aaf4-4d11-bfbe-d7ae667298f3/0_1/network.json...
Writing parameters to <_io.BufferedWriter name='/home/ctripp/dmp/dmp/model_data/355d6326-aaf4-4d11-bfbe-d7ae667298f3/0_1/parameters.pq'>...
Saving model with optimizer type: <class 'NoneType'> with members [].
saving variable: dmp_0/kernel:0 840 (84, 10)
value, 0, 0, 840, (84, 10), values: [-0.00359885  0.14373468  0.2268092   0.07216714]
saving variable: dmp_0/bias:0 10 (10,)
value, 840, 1, 10, (10,), values: [-0.00344598  0.00996202 -0.00567783  0.01047606]
saving variable: dmp_1/kernel:0 10080 (120, 84)
value, 850, 2, 10080, (120, 84), values: [ 0.15740554  0.16725156  0.16770631 -0.02941983]
saving variable: dmp_1/bias:0 84 (84,)
value, 10930, 3, 84, (84,), values: [ 0.00822745  0.         -0.0020402  -0.01049792]
saving variable: dmp_2/kernel:0 18000 (150, 120)
value, 11014, 4, 18000, (150, 120), values: [-0.1189495  0.1360018 -0.2069036 -0.0828211]
saving variable: dmp_2/bias:0 120 (120,)
value, 29014, 5, 120, (120,), values: [ 0.00263061 -0.0055402  -0.00416031  0.0076616 ]
saving variable: dmp_5/kernel:0 900 (5, 5, 6, 6)
value, 29134, 6, 900, (5, 5, 6, 6), values: [-0.15360208  0.04409691 -0.05220193 -0.17611308]
saving variable: dmp_5/bias:0 6 (6,)
value, 30034, 7, 6, (6,), values: [0.00345879 0.02206043 0.01113718 0.        ]
saving variable: dmp_7/kernel:0 150 (5, 5, 1, 6)
value, 30040, 8, 150, (5, 5, 1, 6), values: [ 0.25117615 -0.03760236  0.22636391 -0.4995115 ]
saving variable: dmp_7/bias:0 6 (6,)
value, 30190, 9, 6, (6,), values: [-0.00175173  0.03498688 -0.05607585  0.02867243]
first values: [
  [
    -0.003598846,
    0.14373468,
    0.2268092,
    0.072167136
  ]
], [
  [
    0,
    1,
    2,
    3
  ]
]
Writing model state to /home/ctripp/dmp/dmp/model_data/355d6326-aaf4-4d11-bfbe-d7ae667298f3/0_1/optimizer.pq...
Saving model with optimizer type: <class 'keras.optimizers.optimizer_experimental.adam.Adam'> with members ['_momentums', '_velocities'].
saving variable: dmp_0/kernel:0 840 (84, 10)
value, 0, 0, 840, (84, 10), values: [-0.00359885  0.14373468  0.2268092   0.07216714]
_momentums, 0, 0, 840, (84, 10), values: [ 0.00122825 -0.01356688 -0.01032851 -0.01962719]
_velocities, 0, 0, 840, (84, 10), values: [0.00147009 0.00227336 0.00427331 0.00406057]
saving variable: dmp_0/bias:0 10 (10,)
value, 840, 1, 10, (10,), values: [-0.00344598  0.00996202 -0.00567783  0.01047606]
_momentums, 840, 1, 10, (10,), values: [-0.00215496 -0.00256118 -0.0042644  -0.00307897]
_velocities, 840, 1, 10, (10,), values: [0.0006644  0.00072139 0.00097243 0.00120073]
saving variable: dmp_1/kernel:0 10080 (120, 84)
value, 850, 2, 10080, (120, 84), values: [ 0.15740554  0.16725156  0.16770631 -0.02941983]
_momentums, 850, 2, 10080, (120, 84), values: [-0.00191381  0.          0.00852705 -0.00516881]
_velocities, 850, 2, 10080, (120, 84), values: [0.00088835 0.         0.00117167 0.00040044]
saving variable: dmp_1/bias:0 84 (84,)
value, 10930, 3, 84, (84,), values: [ 0.00822745  0.         -0.0020402  -0.01049792]
_momentums, 10930, 3, 84, (84,), values: [ 0.00048541  0.          0.00452123 -0.00214786]
_velocities, 10930, 3, 84, (84,), values: [0.00021925 0.         0.00029765 0.00012885]
saving variable: dmp_2/kernel:0 18000 (150, 120)
value, 11014, 4, 18000, (150, 120), values: [-0.1189495  0.1360018 -0.2069036 -0.0828211]
_momentums, 11014, 4, 18000, (150, 120), values: [ 2.3382693e-04 -5.2116998e-04  3.7350797e-04 -2.5208981e-05]
_velocities, 11014, 4, 18000, (150, 120), values: [6.9812850e-06 5.1986503e-06 8.0008118e-07 2.4690416e-06]
saving variable: dmp_2/bias:0 120 (120,)
value, 29014, 5, 120, (120,), values: [ 0.00263061 -0.0055402  -0.00416031  0.0076616 ]
_momentums, 29014, 5, 120, (120,), values: [ 0.00113029 -0.00084129  0.00143971 -0.00187335]
_velocities, 29014, 5, 120, (120,), values: [3.2177227e-04 3.3837443e-04 4.6362016e-05 1.2933354e-04]
saving variable: dmp_5/kernel:0 900 (5, 5, 6, 6)
value, 29134, 6, 900, (5, 5, 6, 6), values: [-0.15360208  0.04409691 -0.05220193 -0.17611308]
_momentums, 29134, 6, 900, (5, 5, 6, 6), values: [ 0.02420775 -0.01461967  0.00447527  0.        ]
_velocities, 29134, 6, 900, (5, 5, 6, 6), values: [0.01168476 0.00286366 0.00170986 0.        ]
saving variable: dmp_5/bias:0 6 (6,)
value, 30034, 7, 6, (6,), values: [0.00345879 0.02206043 0.01113718 0.        ]
_momentums, 30034, 7, 6, (6,), values: [ 0.04495978 -0.02959201  0.00191627  0.        ]
_velocities, 30034, 7, 6, (6,), values: [0.04036855 0.01066155 0.00607414 0.        ]
saving variable: dmp_7/kernel:0 150 (5, 5, 1, 6)
value, 30040, 8, 150, (5, 5, 1, 6), values: [ 0.25117615 -0.03760236  0.22636391 -0.4995115 ]
_momentums, 30040, 8, 150, (5, 5, 1, 6), values: [-0.00320114  0.00403508 -0.01119169  0.00882796]
_velocities, 30040, 8, 150, (5, 5, 1, 6), values: [0.00022335 0.00087417 0.00060742 0.00043369]
saving variable: dmp_7/bias:0 6 (6,)
value, 30190, 9, 6, (6,), values: [-0.00175173  0.03498688 -0.05607585  0.02867243]
_momentums, 30190, 9, 6, (6,), values: [-0.00396265 -0.05099717  0.02511891 -0.0160693 ]
_velocities, 30190, 9, 6, (6,), values: [0.00152939 0.02384937 0.005394   0.00277785]
first values: [
  [
    -0.003598846,
    0.14373468,
    0.2268092,
    0.072167136
  ]
], [
  [
    0,
    1,
    2,
    3
  ]
]
Composed([SQL('\nINSERT INTO '), Identifier('model'), SQL(' ( '), Composed([Identifier('run_id'), SQL(','), Identifier('model_number'), SQL(','), Identifier('model_epoch'), SQL(','), Identifier('epoch')]), SQL(' ) \n    SELECT\n        '), Composed([Composed([Identifier('run_id'), SQL('::'), SQL('uuid')]), SQL(','), Composed([Identifier('model_number'), SQL('::'), SQL('integer')]), SQL(','), Composed([Identifier('model_epoch'), SQL('::'), SQL('integer')]), SQL(','), Composed([Identifier('epoch'), SQL('::'), SQL('integer')])]), SQL('\n    FROM\n        ( VALUES ('), Composed([SQL('%b'), SQL(','), SQL('%b'), SQL(','), SQL('%b'), SQL(','), SQL('%b')]), SQL(') ) AS V ('), Composed([Identifier('run_id'), SQL(','), Identifier('model_number'), SQL(','), Identifier('model_epoch'), SQL(','), Identifier('epoch')]), SQL(')\n    ON CONFLICT DO NOTHING;\n')])
experiment_attrs

{'data_set_size': 70000,
 'dataset': 'DatasetSpec',
 'dataset_label_noise': 0.0,
 'dataset_method': 'shuffled_train_test_split',
 'dataset_name': 'mnist',
 'dataset_source': 'keras',
 'dataset_test_split': 0.2,
 'dataset_validation_split': 0.05,
 'early_stopping': 'EarlyStopping',
 'early_stopping_min_delta': 0,
 'early_stopping_monitor': 'val_loss',
 'early_stopping_patience': 50,
 'early_stopping_restore_best_weights': True,
 'fit_batch_size': 32,
 'fit_epochs': 1,
 'input_shape': [28, 28, 1],
 'loss': 'CategoricalCrossentropy',
 'ml_task': 'classification',
 'model': 'LayerFactoryModel',
 'model_input': 'Input',
 'model_input_name': 'dmp_8',
 'model_input_shape': [28, 28, 1],
 'model_layer_factory': 'SequentialModel',
 'model_layer_factory_layer_factories': [{'activation': 'sigmoid',
                                          'activity_regularizer': None,
                                          'bias_constraint': None,
                                          'bias_initializer': 'Zeros',
                                          'bias_regularizer': None,
                                          'data_format': None,
                                          'dilation_rate': [1, 1],
                                          'filters': 6,
                                          'groups': 1,
                                          'kernel_constraint': {'class': 'ParameterMask'},
                                          'kernel_initializer': 'HeUniform',
                                          'kernel_regularizer': None,
                                          'kernel_size': [5, 5],
                                          'padding': 'same',
                                          'strides': [1, 1],
                                          'type': 'DenseConv',
                                          'use_bias': True},
                                         {'data_format': None,
                                          'padding': 'valid',
                                          'pool_size': [2, 2],
                                          'strides': [2, 2],
                                          'type': 'AvgPool'},
                                         {'activation': 'relu',
                                          'activity_regularizer': None,
                                          'bias_constraint': None,
                                          'bias_initializer': 'Zeros',
                                          'bias_regularizer': None,
                                          'data_format': None,
                                          'dilation_rate': [1, 1],
                                          'filters': 6,
                                          'groups': 1,
                                          'kernel_constraint': {'class': 'ParameterMask'},
                                          'kernel_initializer': 'HeUniform',
                                          'kernel_regularizer': None,
                                          'kernel_size': [5, 5],
                                          'padding': 'valid',
                                          'strides': [1, 1],
                                          'type': 'DenseConv',
                                          'use_bias': True},
                                         {'data_format': None,
                                          'padding': 'valid',
                                          'pool_size': [2, 2],
                                          'strides': [2, 2],
                                          'type': 'AvgPool'},
                                         {'depth': 2,
                                          'flatten_input': True,
                                          'inner': {'activation': 'relu',
                                                    'activity_regularizer': None,
                                                    'bias_constraint': None,
                                                    'bias_initializer': 'Zeros',
                                                    'bias_regularizer': None,
                                                    'kernel_constraint': None,
                                                    'kernel_initializer': 'HeUniform',
                                                    'kernel_regularizer': None,
                                                    'type': 'Dense',
                                                    'units': -1,
                                                    'use_bias': True},
                                          'input': None,
                                          'min_width': 84,
                                          'output': None,
                                          'rectangular': False,
                                          'residual_mode': 'none',
                                          'type': 'FullyConnectedNetwork',
                                          'width': 120,
                                          'widths': [120, 84]}],
 'model_output': 'Dense',
 'model_output_activation': 'softmax',
 'model_output_activity_regularizer': None,
 'model_output_bias_constraint': None,
 'model_output_bias_initializer': 'Zeros',
 'model_output_bias_regularizer': None,
 'model_output_kernel_constraint': None,
 'model_output_kernel_initializer': 'GlorotUniform',
 'model_output_kernel_regularizer': None,
 'model_output_units': 10,
 'model_output_use_bias': True,
 'num_free_parameters': 30196,
 'optimizer': 'Adam',
 'optimizer_learning_rate': 0.0001,
 'output_shape': [10],
 'record': 'ExperimentRecordSettings',
 'resume_from': None,
 'test_set_size': 14000,
 'train_set_size': 52500,
 'type': 'TrainingExperiment',
 'validation_set_size': 3500}
experiment_tags

{'model_family': 'lenet', 'model_name': 'lenet_relu'}
run_data
 {'job_id': UUID('355d6326-aaf4-4d11-bfbe-d7ae667298f3'), 'run_id': UUID('355d6326-aaf4-4d11-bfbe-d7ae667298f3'), 'python_version': '3.10.8', 'platform': 'Linux-5.15.90.1-microsoft-standard-WSL2-x86_64-with-glibc2.35', 'tensorflow_version': '2.11.0', 'host_name': 'CTRIPP-36296S', 'slurm_job_id': None, 'git_hash': 'a6dec64', 'batch': 'test', 'precision': 'float32', 'record_metrics': None, 'record_model': None, 'record_model_saving': 'HybridSaveMode', 'record_model_saving_exponential_rate': 0, 'record_model_saving_fixed_interval': 0, 'record_model_saving_fixed_threshold': 0, 'record_model_saving_save_epochs': [1], 'record_model_saving_save_initial_model': False, 'record_model_saving_save_model_epochs': [], 'record_model_saving_save_trained_model': False, 'record_post_training_metrics': True, 'record_times': True, 'test': True, 'seed': 100, 'task_version': 12}
run_history
    epoch epoch_start_ms train_ms test_ms trained_ms  train_loss  train_categorical_crossentropy  train_accuracy  validation_loss  validation_categorical_crossentropy  validation_accuracy  test_loss  test_categorical_crossentropy  \
0      0           None     None    None       None    2.441453                        2.441453        0.104343         2.437844                             2.437844             0.096000   2.446702                       2.446702   
1      1  1684537841102     4800     464       1903    1.119509                        1.119509        0.679790         0.528549                             0.528549             0.852571   0.530633                       0.530633   

   test_accuracy  trained_loss  trained_categorical_crossentropy  trained_accuracy  
0       0.098571      2.441453                          2.441453          0.104343  
1       0.846143      0.538206                          0.538206          0.840648  
run_extended_history
    epoch  test_cosine_similarity  train_cosine_similarity  validation_categorical_hinge  train_categorical_hinge  trained_cosine_similarity  validation_kullback_leibler_divergence  train_kullback_leibler_divergence  \
0      0                0.271856                 0.273786                      1.113072                 1.112351                   0.273786                                2.437833                           2.441439   
1      1                0.862245                 0.696524                      0.471529                 0.733534                   0.859355                                0.528540                           1.119500   

   trained_kullback_leibler_divergence  trained_categorical_hinge  validation_cosine_similarity  test_categorical_hinge  test_kullback_leibler_divergence  
0                             2.441439                   1.112351                      0.273568                1.113274                          2.446690  
1                             0.538198                   0.473370                      0.863671                0.469515                          0.530624  
/home/ctripp/dmp/env0/lib/python3.10/site-packages/sklearn/preprocessing/_encoders.py:828: FutureWarning: `sparse` was renamed to `sparse_output` in version 1.2 and will be removed in 1.4. `sparse_output` is ignored unless you leave `sparse` to its default value.
  warnings.warn(
/home/ctripp/dmp/env0/lib/python3.10/site-packages/sklearn/preprocessing/_encoders.py:828: FutureWarning: `sparse` was renamed to `sparse_output` in version 1.2 and will be removed in 1.4. `sparse_output` is ignored unless you leave `sparse` to its default value.
  warnings.warn(
0: [] -> (<class 'dmp.layer.input.Input'>: 0, [28, 28, 1], ) -> [1]
1: [0] -> (<class 'dmp.layer.dense_conv.DenseConv'>: 156, (28, 28, 6), 5x5, s: 1x1, sigmoid) -> [2]
2: [1] -> (<class 'dmp.layer.avg_pool.AvgPool'>: 0, (14, 14, 6), s: 2x2) -> [3]
3: [2] -> (<class 'dmp.layer.dense_conv.DenseConv'>: 906, (10, 10, 6), 5x5, s: 1x1, relu) -> [4]
4: [3] -> (<class 'dmp.layer.avg_pool.AvgPool'>: 0, (5, 5, 6), s: 2x2) -> [5]
5: [4] -> (<class 'dmp.layer.flatten.Flatten'>: 0, (150,), ) -> [6]
6: [5] -> (<class 'dmp.layer.dense.Dense'>: 18120, (120,), x120, relu) -> [7]
7: [6] -> (<class 'dmp.layer.dense.Dense'>: 10164, (84,), x84, relu) -> [8]
8: [7] -> (<class 'dmp.layer.dense.Dense'>: 850, (10,), x10, softmax) -> []
first values: [
  [
    -0.003598846,
    0.14373468,
    0.2268092,
    0.072167136
  ]
]
Loading model with optimizer type: <class 'keras.optimizers.optimizer_experimental.adam.Adam'> with members [].
loading variable: dmp_0/kernel:0 840 (84, 10) 0
value, 0, 840, (84, 10), values: [-0.00359885  0.14373468  0.2268092   0.07216714]
loading variable: dmp_0/bias:0 10 (10,) 840
value, 840, 10, (10,), values: [-0.00344598  0.00996202 -0.00567783  0.01047606]
loading variable: dmp_1/kernel:0 10080 (120, 84) 850
value, 850, 10080, (120, 84), values: [ 0.15740554  0.16725156  0.16770631 -0.02941983]
loading variable: dmp_1/bias:0 84 (84,) 10930
value, 10930, 84, (84,), values: [ 0.00822745  0.         -0.0020402  -0.01049792]
loading variable: dmp_2/kernel:0 18000 (150, 120) 11014
value, 11014, 18000, (150, 120), values: [-0.1189495  0.1360018 -0.2069036 -0.0828211]
loading variable: dmp_2/bias:0 120 (120,) 29014
value, 29014, 120, (120,), values: [ 0.00263061 -0.0055402  -0.00416031  0.0076616 ]
loading variable: dmp_5/kernel:0 900 (5, 5, 6, 6) 29134
value, 29134, 900, (5, 5, 6, 6), values: [-0.15360208  0.04409691 -0.05220193 -0.17611308]
loading variable: dmp_5/bias:0 6 (6,) 30034
value, 30034, 6, (6,), values: [0.00345879 0.02206043 0.01113718 0.        ]
loading variable: dmp_7/kernel:0 150 (5, 5, 1, 6) 30040
value, 30040, 150, (5, 5, 1, 6), values: [ 0.25117615 -0.03760236  0.22636391 -0.4995115 ]
loading variable: dmp_7/bias:0 6 (6,) 30190
value, 30190, 6, (6,), values: [-0.00175173  0.03498688 -0.05607585  0.02867243]
0: [] -> (<class 'dmp.layer.input.Input'>: 0, [28, 28, 1], "dmp_8") -> [1]
1: [0] -> (<class 'dmp.layer.dense_conv.DenseConv'>: 156, (28, 28, 6), 5x5, s: 1x1, sigmoid, "dmp_7") -> [2]
2: [1] -> (<class 'dmp.layer.avg_pool.AvgPool'>: 0, (14, 14, 6), s: 2x2, "dmp_6") -> [3]
3: [2] -> (<class 'dmp.layer.dense_conv.DenseConv'>: 906, (10, 10, 6), 5x5, s: 1x1, relu, "dmp_5") -> [4]
4: [3] -> (<class 'dmp.layer.avg_pool.AvgPool'>: 0, (5, 5, 6), s: 2x2, "dmp_4") -> [5]
5: [4] -> (<class 'dmp.layer.flatten.Flatten'>: 0, (150,), "dmp_3") -> [6]
6: [5] -> (<class 'dmp.layer.dense.Dense'>: 18120, (120,), x120, relu, "dmp_2") -> [7]
7: [6] -> (<class 'dmp.layer.dense.Dense'>: 10164, (84,), x84, relu, "dmp_1") -> [8]
8: [7] -> (<class 'dmp.layer.dense.Dense'>: 850, (10,), x10, softmax, "dmp_0") -> []